{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-pay-form/add-pay-form.component.ts","webpack:///src/app/add-pay-form/add-pay-form.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/material.module.ts","webpack:///src/app/dashboard/dash-menu/dash-menu.component.ts","webpack:///src/app/dashboard/dash-menu/dash-menu.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/manage-form/manage-form.component.ts","webpack:///src/app/dashboard/manage-form/manage-form.component.html","webpack:///src/app/dashboard/manage-payment/manage-payment.component.ts","webpack:///src/app/dashboard/manage-payment/manage-payment.component.html","webpack:///src/app/data-table/data-table-datasource.ts","webpack:///src/app/data-table/data-table.component.ts","webpack:///src/app/data-table/data-table.component.html","webpack:///src/app/home-page/home-page.component.ts","webpack:///src/app/home-page/home-page.component.html","webpack:///src/app/login/auth.guard.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/model/user.model.ts","webpack:///src/app/my-modal/delete-pay-data-modal/delete-pay-data-modal.component.ts","webpack:///src/app/my-modal/delete-pay-data-modal/delete-pay-data-modal.component.html","webpack:///src/app/my-modal/payment-confirm/payment-confirm-modal/payment-confirm-modal.component.ts","webpack:///src/app/my-modal/payment-confirm/payment-confirm-modal/payment-confirm-modal.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/pay-success-invoice/pay-success-invoice.component.ts","webpack:///src/app/pay-success-invoice/pay-success-invoice.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/data-storage.service.ts","webpack:///src/app/services/payform.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddPayFormComponent","dataStorageService","payFormService","dialog","router","isLoading","isSenderMobNoLoading","foundMatchedPayData","openfoundMatchCard","payTypeOption","paymentForm","required","fetchBankName","subscribe","bankName","filteredBankNames","get","valueChanges","pipe","value","_filter","filterValue","toLowerCase","filter","indexOf","console","log","submittedPayData","benefName","senderMobNo","senderName","accountNumber","payType","ifscCode","payAmount","payAmountInWords","getAmountInWords","todayDate","getTodayDate","todayTime","getTodayTime","transactionId","getTransId","status","addPayData","openDialog","setTimeout","navigate","dateObj","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","today","hour","getHours","minute","getMinutes","seconds","getSeconds","checkTime","i","price","sglDigit","dblDigit","tensPlace","handle_tens","dgt","prevDgt","handle_utlc","nxtDgt","denom","str","digitIdx","digit","nxtDigit","words","isNaN","parseInt","length","push","reverse","join","amountInNumber","replace","amountInWords","price_in_words","x","toString","lastThree","substring","otherNumbers","resAmountInNumber","split","dialogRef","open","disableClose","afterClosed","result","fetchPayData","res","payData","payFormData","checkIfNumberMatched","tempPayData","tempSenderMobNo","k","index","payDataJSON","patchValue","reset","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","authService","title","autoLogin","appRoutes","path","component","children","canActivate","AppModule","declarations","providers","bootstrap","CustomMaterialModule","DashMenuComponent","bankData","totalPaid","bankLoading","payLoading","totalLoading","calcTotalPayment","amount","gotoManageBank","gotoManagePayment","DashboardComponent","ManageComponent","fullBankNames","bankList","arrayOfLines","storeBankName","openSnackBar","addBankNamesToForm","goBack","ManagePaymentComponent","DataTableDataSource","data","dataMutations","paginator","page","sort","sortChange","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","delId","DataTableComponent","dataSource","displayedColumns","table","deletePaymentId","HomePageComponent","imgCheckedOne","imgCheckedTwo","imgCheckedThree","imgCheckedFour","imgCheckedFive","AuthGuard","route","state","isAuth","user","createUrlTree","providedIn","LoginComponent","_snackBar","allowedUser","isLoginMode","form","valid","email","includes","password","authObs","login","resData","gotoHomePage","errorMessage","message","action","duration","User","_token","_tokenExpirationDate","DeletePayDataModalComponent","close","deletePayData","onNoClick","PaymentConfirmModalComponent","inPaymentMode","redirectToInvoice","redirectCountDown","paymentDone","storePayData","startRedirectCountDown","refreshIntervalId","setInterval","clearInterval","NavbarComponent","events","isAuthenticated","userSub","logout","PaySuccessInvoiceComponent","showPrintButton","undefined","window","print","fbase_key","AuthService","http","token","post","returnSecureToken","errorHandler","handelAunthenntication","localId","idToken","expiresIn","UserData","JSON","parse","localStorage","getItem","loadedUser","expirationDuration","getTime","autoLogout","accPage","removeItem","tokenExpirationTimer","clearTimeout","userId","expirationDate","setItem","stringify","errorRes","error","DataStorageService","userToken","responseData","bankNameArr","put","PayFormService","paymentInitiated","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n// this is test\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { PayFormService } from '../services/payform.service';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport { PaymentConfirmModalComponent } from '../my-modal/payment-confirm/payment-confirm-modal/payment-confirm-modal.component';\r\nimport { DataStorageService } from '../services/data-storage.service';\r\nimport { PayModel } from '../model/payform.model';\r\n\r\n@Component({\r\n  selector: 'app-add-pay-form',\r\n  templateUrl: './add-pay-form.component.html',\r\n  styleUrls: ['./add-pay-form.component.css']\r\n})\r\nexport class AddPayFormComponent implements OnInit {\r\n  isLoading: boolean = false;\r\n  isSenderMobNoLoading: boolean = false;\r\n  paymentForm: FormGroup;\r\n  payData: PayModel[];\r\n  bankName: string[];\r\n  foundMatchedPayData = []\r\n  openfoundMatchCard = false;\r\n  payTypeOption: string[] = [\r\n    'IMPS',\r\n    'NEFT'\r\n  ];\r\n  filteredBankNames: Observable<string[]>;\r\n  \r\n  constructor(\r\n    private dataStorageService: DataStorageService,\r\n    private payFormService: PayFormService,\r\n    public dialog: MatDialog,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // payment form\r\n    this.paymentForm = new FormGroup({\r\n      'benefName': new FormControl(null, Validators.required),\r\n      'senderMobNo': new FormControl(null, Validators.required),\r\n      'senderName': new FormControl(null, Validators.required),\r\n      'accountNumber': new FormControl(null, Validators.required),\r\n      'payType': new FormControl('IMPS', Validators.required),\r\n      'ifscCode': new FormControl(null, Validators.required),\r\n      'bankName': new FormControl(null, Validators.required),\r\n      'payAmount': new FormControl(null, Validators.required)\r\n    });\r\n    /*\r\n    this.paymentForm = new FormGroup({\r\n      'benefName': new FormControl('null', Validators.required),\r\n      'senderMobNo': new FormControl('null', Validators.required),\r\n      'senderName': new FormControl('null', Validators.required),\r\n      'accountNumber': new FormControl('null', Validators.required),\r\n      'payType': new FormControl('IMPS', Validators.required),\r\n      'ifscCode': new FormControl('null', Validators.required),\r\n      'bankName': new FormControl('Central Bank of India', Validators.required),\r\n      'payAmount': new FormControl('634565', Validators.required)\r\n    });\r\n    */\r\n    // this.fetchBankName();\r\n    this.isLoading = true;\r\n    this.dataStorageService.fetchBankName()\r\n      .subscribe( () => {\r\n        this.isLoading = false;\r\n        this.bankName = this.dataStorageService.bankName;\r\n        // filter banklist\r\n        this.filteredBankNames = this.paymentForm.get('bankName').valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => this._filter(value))\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    if (value === null) {return}\r\n    const filterValue = value.toLowerCase();\r\n    return this.bankName.filter(bankName => bankName.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n  onSubmit() {\r\n    console.log(this.paymentForm.value);\r\n\r\n    const submittedPayData = {\r\n      benefName: this.paymentForm.value.benefName,\r\n      senderMobNo: this.paymentForm.value.senderMobNo,\r\n      senderName: this.paymentForm.value.senderName,\r\n      accountNumber: this.paymentForm.value.accountNumber,\r\n      payType: this.paymentForm.value.payType,\r\n      ifscCode: this.paymentForm.value.ifscCode,\r\n      bankName: this.paymentForm.value.bankName,\r\n      payAmount: this.paymentForm.value.payAmount,\r\n      payAmountInWords: this.getAmountInWords(),\r\n      todayDate: this.getTodayDate(),\r\n      todayTime: this.getTodayTime(),\r\n      transactionId: this.getTransId(),\r\n      status: 'SUCCESS'\r\n    };\r\n    this.payFormService.addPayData(submittedPayData);\r\n    this.openDialog();\r\n      setTimeout(function() {\r\n    }, 5000);\r\n  }\r\n  gotoPayInfo() {\r\n    this.router.navigate(['/pay-success-invoice']);\r\n  }\r\n  // get today's date\r\n  getTodayDate() {\r\n    let dateObj = new Date();\r\n    let day = String(dateObj.getDate()).padStart(2, '0');\r\n    let month: any = dateObj.getMonth() + 1;\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n    let year = dateObj.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  }\r\n  // get today's time\r\n  getTodayTime() {\r\n    var today = new Date();\r\n    var hour = today.getHours();\r\n    var minute = today.getMinutes();\r\n    var seconds = today.getSeconds();\r\n    // add a zero in front of numbers<10\r\n    hour = this.checkTime(hour);\r\n    minute = this.checkTime(minute);\r\n    seconds = this.checkTime(seconds);\r\n    return `${hour}:${minute}:${seconds}`;\r\n\r\n  }\r\n  checkTime(i: any) {\r\n    if (i < 10) {\r\n      i = \"0\" + i;\r\n    }\r\n    return i;\r\n  }\r\n  // convert number to indian system\r\n\tprice_in_words(price: any) {\r\n    var sglDigit = [\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"],\r\n      dblDigit = [\"Ten\", \"Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\", \"Nineteen\"],\r\n      tensPlace = [\"\", \"Ten\", \"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\"],\r\n      handle_tens = function(dgt, prevDgt) {\r\n        return 0 == dgt ? \"\" : \" \" + (1 == dgt ? dblDigit[prevDgt] : tensPlace[dgt])\r\n      },\r\n      handle_utlc = function(dgt, nxtDgt, denom) {\r\n        return (0 != dgt && 1 != nxtDgt ? \" \" + sglDigit[dgt] : \"\") + (0 != nxtDgt || dgt > 0 ? \" \" + denom : \"\")\r\n      };\r\n  \r\n    var str = \"\",\r\n      digitIdx = 0,\r\n      digit = 0,\r\n      nxtDigit = 0,\r\n      words = [];\r\n    if (price += \"\", isNaN(parseInt(price))) str = \"\";\r\n    else if (parseInt(price) > 0 && price.length <= 10) {\r\n      for (digitIdx = price.length - 1; digitIdx >= 0; digitIdx--) switch (digit = price[digitIdx] - 0, nxtDigit = digitIdx > 0 ? price[digitIdx - 1] - 0 : 0, price.length - digitIdx - 1) {\r\n        case 0:\r\n          words.push(handle_utlc(digit, nxtDigit, \"\"));\r\n          break;\r\n        case 1:\r\n          words.push(handle_tens(digit, price[digitIdx + 1]));\r\n          break;\r\n        case 2:\r\n          words.push(0 != digit ? \" \" + sglDigit[digit] + \" Hundred\" + (0 != price[digitIdx + 1] && 0 != price[digitIdx + 2] ? \" and\" : \"\") : \"\");\r\n          break;\r\n        case 3:\r\n          words.push(handle_utlc(digit, nxtDigit, \"Thousand\"));\r\n          break;\r\n        case 4:\r\n          words.push(handle_tens(digit, price[digitIdx + 1]));\r\n          break;\r\n        case 5:\r\n          words.push(handle_utlc(digit, nxtDigit, \"Lakh\"));\r\n          break;\r\n        case 6:\r\n          words.push(handle_tens(digit, price[digitIdx + 1]));\r\n          break;\r\n        case 7:\r\n          words.push(handle_utlc(digit, nxtDigit, \"Crore\"));\r\n          break;\r\n        case 8:\r\n          words.push(handle_tens(digit, price[digitIdx + 1]));\r\n          break;\r\n        case 9:\r\n          words.push(0 != digit ? \" \" + sglDigit[digit] + \" Hundred\" + (0 != price[digitIdx + 1] || 0 != price[digitIdx + 2] ? \" and\" : \" Crore\") : \"\")\r\n      }\r\n      str = words.reverse().join(\"\")\r\n    } else str = \"\";\r\n    return str\r\n  }\r\n  getAmountInWords() {\r\n    let amountInNumber = this.paymentForm.value.payAmount;\r\n    amountInNumber = amountInNumber.replace(/\\,/g,\"\");\r\n\r\n    console.log(amountInNumber);\r\n    let amountInWords = this.price_in_words(amountInNumber);\r\n\r\n    var x: any = amountInNumber;\r\n    x=x.toString();\r\n    var lastThree = x.substring(x.length-3);\r\n    var otherNumbers = x.substring(0,x.length-3);\r\n    if(otherNumbers != '')\r\n        lastThree = ',' + lastThree;\r\n    var resAmountInNumber = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\r\n    \r\n    return `${resAmountInNumber} (Rs${amountInWords} only)`;\r\n  }\r\n  // transaction ID\r\n  getTransId() {\r\n    let todayDate = this.getTodayDate().split(\"-\");\r\n    let todayTime = this.getTodayTime().split(\":\");\r\n    return `${todayDate[2]}${todayDate[1]}${todayDate[0]}${todayTime[2]}${todayTime[1]}${todayTime[0]}`\r\n  }\r\n  // modal\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(PaymentConfirmModalComponent, {disableClose: true});\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  getOldPayDataData() {\r\n    this.isSenderMobNoLoading = true;\r\n    this.dataStorageService.fetchPayData()\r\n      .subscribe(res => {\r\n        this.payData = this.dataStorageService.payFormData;\r\n        // console.log(this.payData);\r\n        this.checkIfNumberMatched();\r\n        this.isSenderMobNoLoading = false;\r\n      })\r\n  }\r\n  checkIfNumberMatched() {\r\n    let tempPayData = this.payData;\r\n    let tempSenderMobNo = this.paymentForm.value.senderMobNo;\r\n    this.foundMatchedPayData = [];\r\n    for (let k in tempPayData) {\r\n      if (\r\n        tempPayData[k].senderMobNo === tempSenderMobNo\r\n      ) {\r\n        console.log('Match Found !!');\r\n        console.log();\r\n        this.foundMatchedPayData.push(tempPayData[k]);\r\n        this.openfoundMatchCard = true;\r\n      } else {}\r\n    }\r\n  }\r\n  patchFoundPayData(index: number) {\r\n    let payDataJSON = this.foundMatchedPayData[index];\r\n    console.log(payDataJSON);\r\n    // return;\r\n    this.paymentForm.patchValue({\r\n      'benefName': payDataJSON.benefName,\r\n      // 'senderMobNo': payDataJSON.senderMobNo,\r\n      'senderName': payDataJSON.senderName,\r\n      'accountNumber': payDataJSON.accountNumber,\r\n      'payType': payDataJSON.payType,\r\n      'ifscCode': payDataJSON.ifscCode,\r\n      'bankName': payDataJSON.bankName,\r\n      'payAmount': payDataJSON.payAmount,\r\n    });\r\n    this.openfoundMatchCard = false;\r\n  }\r\n  closeMatchFoundCard() {\r\n    this.openfoundMatchCard = false;\r\n  }\r\n  resetForm() {\r\n    this.paymentForm.reset();\r\n    this.paymentForm.patchValue({\r\n      'benefName': null,\r\n      'senderMobNo': null,\r\n      'senderName': null,\r\n      'accountNumber': null,\r\n      'payType': 'IMPS',\r\n      'ifscCode': null,\r\n      'bankName': null,\r\n      'payAmount': null\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"!isLoading\">\r\n<form\r\n  [formGroup]=\"paymentForm\"\r\n  (ngSubmit)=\"onSubmit()\">\r\n<mat-card>\r\n  <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n    <mat-label>Beneficiery Name:</mat-label>\r\n    <input \r\n      matInput\r\n      formControlName=\"benefName\">\r\n    <mat-error *ngIf=\"paymentForm.get('benefName').hasError('required')\">\r\n      This field is required\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field class=\"w-50 w-sm-100\" appearance=\"fill\">\r\n    <mat-label>Sender Mobile Number:</mat-label>\r\n    <input \r\n      matInput\r\n      formControlName=\"senderMobNo\"\r\n      (blur)=\"getOldPayDataData()\">\r\n    <mat-error \r\n      *ngIf=\"paymentForm.get('senderMobNo').hasError('required')\">\r\n      This field is required\r\n    </mat-error>\r\n    <mat-spinner\r\n      *ngIf=\"isSenderMobNoLoading\"\r\n      class=\"input-spinner\"\r\n      [diameter]=\"20\"></mat-spinner>\r\n  </mat-form-field>\r\n  \r\n  <!-- <mat-form-field class=\"w-50 w-sm-100\" appearance=\"fill\">\r\n    <mat-label>Agent Shop Name: </mat-label>\r\n    <input matInput value=\"NarayanShanti Enterprise\">\r\n  </mat-form-field> -->\r\n  <mat-form-field class=\"w-50 w-sm-100\" appearance=\"fill\">\r\n    <mat-label>Sender Name:</mat-label>\r\n    <input\r\n      matInput\r\n      formControlName=\"senderName\">\r\n    <mat-error \r\n      *ngIf=\"paymentForm.get('senderName').hasError('required')\">\r\n      This field is required\r\n    </mat-error>\r\n  </mat-form-field>\r\n</mat-card>\r\n<mat-card>\r\n  <mat-form-field class=\"w-50 w-sm-100\" appearance=\"fill\">\r\n    <mat-label>Account Number:</mat-label>\r\n    <input \r\n      matInput\r\n      formControlName=\"accountNumber\">\r\n    <mat-error \r\n      *ngIf=\"paymentForm.get('accountNumber').hasError('required')\">\r\n      This field is required\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field class=\"w-50 w-sm-100\" appearance=\"fill\">\r\n    <mat-label>Type:</mat-label>\r\n    <mat-select\r\n      formControlName=\"payType\">\r\n      <mat-option\r\n      *ngFor=\"let eachPayTypeOption of payTypeOption\"\r\n      [value]=\"eachPayTypeOption\"\r\n      >{{eachPayTypeOption}}</mat-option>\r\n      <!-- <mat-option value=\"IMPS\">IMPS</mat-option>\r\n      <mat-option value=\"NEFT\">NEFT</mat-option> -->\r\n    </mat-select>\r\n    <mat-error \r\n      *ngIf=\"paymentForm.get('payType').hasError('required')\">\r\n      This field is required\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field class=\"w-50 w-sm-100\" appearance=\"fill\">\r\n    <mat-label>IFCS Code:</mat-label>\r\n    <input \r\n      matInput\r\n      formControlName=\"ifscCode\">\r\n    <mat-error \r\n      *ngIf=\"paymentForm.get('ifscCode').hasError('required')\">\r\n      This field is required\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <!-- <mat-form-field appearance=\"fill\">\r\n    <mat-label>Bank Name:</mat-label>\r\n    <mat-select>\r\n      <mat-option value=\"IMPS\">IMPS</mat-option>\r\n      <mat-option value=\"NEFT\">NEFT</mat-option>\r\n    </mat-select>\r\n  </mat-form-field> -->\r\n  <mat-form-field class=\"w-50 w-sm-100\" appearance=\"fill\">\r\n    <mat-label>Bank Name:</mat-label>\r\n    <input type=\"text\"\r\n      placeholder=\"Pick one\"\r\n      aria-label=\"Number\"\r\n      matInput\r\n      [matAutocomplete]=\"auto\"\r\n      formControlName=\"bankName\">\r\n    <!-- <mat-error \r\n      *ngIf=\"paymentForm.get('bankName').hasError('required')\">\r\n      This field is required\r\n    </mat-error> -->\r\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let bankName of filteredBankNames | async\" [value]=\"bankName\">\r\n        {{bankName}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n  <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n    <mat-label>Amount:</mat-label>\r\n    <input\r\n      matInput\r\n      formControlName=\"payAmount\">\r\n    <mat-error \r\n      *ngIf=\"paymentForm.get('payAmount').hasError('required')\">\r\n      This field is required\r\n    </mat-error>\r\n  </mat-form-field>\r\n</mat-card>\r\n<!-- <mat-card>\r\n  <mat-form-field class=\"w-50 w-sm-100\" appearance=\"fill\">\r\n    <mat-label>Transaction Id:</mat-label>\r\n    <input matInput>\r\n  </mat-form-field>\r\n  <mat-form-field class=\"w-50 w-sm-100\" appearance=\"fill\">\r\n    <mat-label>Status:</mat-label>\r\n    <mat-select>\r\n      <mat-option value=\"null\" disabled selected></mat-option>\r\n      <mat-option value=\"SUCCESS\">SUCCESS</mat-option>\r\n      <mat-option value=\"PENDING\">PENDING</mat-option>\r\n      <mat-option value=\"AWAITED\">AWAITED</mat-option>\r\n      <mat-option value=\"DENIED\">DENIED</mat-option>\r\n      <mat-option value=\"REJECTED\">REJECTED</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</mat-card> -->\r\n<button \r\n  mat-raised-button \r\n  type=\"submit\"\r\n  class=\"btn-submit\"\r\n  color=\"primary\"\r\n  [disabled]=\"!paymentForm.valid\">\r\n  Save Payment Details\r\n  <i class=\"fas fa-paper-plane\"></i>\r\n  </button>\r\n  <br>\r\n<button \r\n  mat-raised-button \r\n  type=\"button\"\r\n  class=\"btn-submit btn-reset\"\r\n  color=\"warn\"\r\n  (click)=\"resetForm()\">\r\n  Reset Form\r\n  <i class=\"fas fa-times\"></i>\r\n  </button>\r\n  <br>\r\n  <!-- <button \r\n    mat-raised-button \r\n    color=\"primary\"\r\n    type=\"button\"\r\n    class=\"btn-submit\"\r\n    (click)=\"gotoPayInfo()\">\r\n    Test Invoice\r\n  </button> -->\r\n</form>\r\n</div>\r\n<div\r\n  class=\"my-spinner\"\r\n  *ngIf=\"isLoading\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div\r\n  class=\"black-overlay\"\r\n  *ngIf=\"openfoundMatchCard\"\r\n  (click)=\"closeMatchFoundCard()\"></div>\r\n<div\r\n  class=\"my-spinner\"\r\n  *ngIf=\"openfoundMatchCard\">\r\n  <mat-card class=\"match-found-card\">\r\n    <!-- <h5>There are multiple data with this number</h5> -->\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Benificiery Name</th>\r\n          <th>Account No.</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          role=\"listitem\"\r\n          *ngFor=\"let payDataFound of foundMatchedPayData; let i = index\"\r\n          >\r\n          <td>{{payDataFound.benefName}}</td>\r\n          <td>{{payDataFound.accountNumber}}</td>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              mat-icon-button\r\n              color=\"primary\"\r\n              (click)=\"patchFoundPayData(i)\"\r\n              style=\"font-size: 24px;\">\r\n              <i class=\"fas fa-check-circle\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    \r\n    <button\r\n      type=\"button\"\r\n      mat-raised-button\r\n      color=\"warn\"\r\n      (click)=\"closeMatchFoundCard()\"\r\n      >\r\n      Close\r\n      <i class=\"fas fa-times\"></i>\r\n    </button>\r\n  </mat-card>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'nse-app';\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  gotoAccountPage() {\r\n    this.router.navigate(['/account']);\r\n  }\r\n  gotoHomePage() {\r\n    this.router.navigate(['/add-pay-form']);\r\n  }\r\n  gotoPayInvoice() {\r\n    this.router.navigate(['/pay-success-invoice']);\r\n  }  \r\n  ngOnInit() {\r\n    this.authService.autoLogin();\r\n  }\r\n\r\n}\r\n","<!-- <app-navbar></app-navbar> -->\r\n<router-outlet></router-outlet>\r\n<!-- <app-login></app-login> -->\r\n<!-- <app-add-pay-form></app-add-pay-form>\r\n<app-pay-success-invoice></app-pay-success-invoice> -->","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n// angular modules\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n// http client\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// custom material module\r\nimport { CustomMaterialModule } from './core/material.module';\r\n// services\r\nimport { PayFormService } from './services/payform.service';\r\n// component\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { PaySuccessInvoiceComponent } from './pay-success-invoice/pay-success-invoice.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AddPayFormComponent } from './add-pay-form/add-pay-form.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { PaymentConfirmModalComponent } from './my-modal/payment-confirm/payment-confirm-modal/payment-confirm-modal.component';\r\nimport { AuthGuard } from './login/auth.guard';\r\n// dashboard\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ManageComponent } from './dashboard/manage-form/manage-form.component';\r\nimport { DashMenuComponent } from './dashboard/dash-menu/dash-menu.component';\r\nimport { ManagePaymentComponent } from './dashboard/manage-payment/manage-payment.component';\r\nimport { DataTableComponent } from './data-table/data-table.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { DeletePayDataModalComponent } from './my-modal/delete-pay-data-modal/delete-pay-data-modal.component';\r\n// import { AuthInterceptorSerivce } from './login/auth-interceptor.service';\r\n\r\n// routing\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '', component: NavbarComponent,\r\n    children: [\r\n      {path: '', component: HomePageComponent, canActivate: [AuthGuard]},\r\n      {path: 'add-pay-form', component: AddPayFormComponent, canActivate: [AuthGuard]},\r\n      {\r\n        path: 'dashboard',\r\n        component: DashboardComponent,\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n          {path: '', component: DashMenuComponent},\r\n          {path: 'manage-form', component: ManageComponent},\r\n          {path: 'manage-payment', component: ManagePaymentComponent}\r\n        ]\r\n      },\r\n    ]\r\n  },\r\n  {path: 'account', component: LoginComponent},\r\n  {path: 'pay-success-invoice', component: PaySuccessInvoiceComponent, canActivate: [AuthGuard]}\r\n]; \r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    PaySuccessInvoiceComponent,\r\n    LoginComponent,\r\n    AddPayFormComponent,\r\n    HomePageComponent,\r\n    PaymentConfirmModalComponent,\r\n    // dashboard\r\n    DashboardComponent,\r\n    DashMenuComponent,\r\n    ManageComponent,\r\n    ManagePaymentComponent,\r\n    DataTableComponent,\r\n    DeletePayDataModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    CustomMaterialModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule\r\n  ],\r\n  providers: [\r\n    PayFormService\r\n    // ,\r\n    // {\r\n    //   provide: HTTP_INTERCEPTORS,\r\n    //   useClass: AuthInterceptorSerivce,\r\n    //   multi: true\r\n    // }    \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","/*\r\nimport {NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\n// import {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {LayoutModule } from '@angular/cdk/layout';\r\nimport {MatSidenavModule } from '@angular/material/sidenav';\r\nimport {MatListModule } from '@angular/material/list';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatMenuModule,\r\n    // MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    LayoutModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatGridListModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    MatExpansionModule,\r\n    MatRadioModule,\r\n    MatSortModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSnackBarModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatMenuModule,\r\n    // MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    LayoutModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatGridListModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    MatExpansionModule,\r\n    MatRadioModule,\r\n    MatSortModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSnackBarModule\r\n   ]\r\n})\r\nexport class CustomMaterialModule { }\r\n*/\r\nimport {NgModule} from '@angular/core';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n  ],\r\n})\r\nexport class CustomMaterialModule {}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataStorageService } from 'src/app/services/data-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-dash-menu',\r\n  templateUrl: './dash-menu.component.html',\r\n  styleUrls: ['./dash-menu.component.css']\r\n})\r\nexport class DashMenuComponent implements OnInit {\r\n  bankData = [];\r\n  payData = [];\r\n  totalPaid = 0;\r\n  bankLoading = false;\r\n  payLoading = false;\r\n  totalLoading = false;\r\n  constructor(\r\n    private dataStorageService: DataStorageService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.bankLoading = false;\r\n    this.payLoading = false;\r\n    this.totalLoading = false;\r\n    this.dataStorageService.fetchBankName()\r\n      .subscribe(() => {\r\n        this.bankData = this.dataStorageService.bankName;\r\n        this.bankLoading = true;\r\n      });\r\n    this.dataStorageService.fetchPayData()\r\n      .subscribe(() => {\r\n        this.payData = this.dataStorageService.payFormData;\r\n        this.payLoading = true;\r\n        this.totalPaid = this.calcTotalPayment();\r\n        this.totalLoading = true;\r\n        \r\n      });\r\n  }\r\n  gotoManageBank() {\r\n    this.router.navigate(['/dashboard/manage-form']);\r\n  }\r\n  gotoManagePayment() {\r\n    this.router.navigate(['/dashboard/manage-payment']);\r\n  }\r\n  calcTotalPayment() {\r\n    let amount = 0;\r\n    for (let k in this.payData) {\r\n      amount += +this.payData[k].payAmount;\r\n    }\r\n    var x: any = amount;\r\n    x=x.toString();\r\n    var lastThree = x.substring(x.length-3);\r\n    var otherNumbers = x.substring(0,x.length-3);\r\n    if(otherNumbers != '')\r\n        lastThree = ',' + lastThree;\r\n    amount = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\r\n    return amount;\r\n  }\r\n}\r\n","<mat-card>\r\n  <h4>Dashbord Menu</h4>\r\n  <div class=\"main-menu\">\r\n    <button \r\n    type=\"button\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    (click)=\"gotoManageBank()\">\r\n    Manage Bank Names\r\n  </button>\r\n  <span> | </span>\r\n  <button \r\n    type=\"button\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    (click)=\"gotoManagePayment()\">\r\n    Manage Payment Entries\r\n  </button>\r\n  </div>\r\n</mat-card>\r\n\r\n<div class=\"view-card\">\r\n  <mat-card>\r\n    <h3>Banks Added</h3>\r\n    <p *ngIf=\"!bankLoading\">\r\n      <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </p>\r\n    <p *ngIf=\"bankLoading\">{{bankData.length}}</p>\r\n  </mat-card>\r\n  <mat-card>\r\n    <h3>Payment Done</h3>\r\n    <p *ngIf=\"!payLoading\">\r\n      <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </p>\r\n    <p *ngIf=\"payLoading\">{{payData.length}}</p>\r\n  </mat-card>\r\n  <mat-card>\r\n    <h3>Total (₹)</h3>\r\n    <p *ngIf=\"!totalLoading\">\r\n      <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </p>\r\n    <p *ngIf=\"totalLoading\">{{totalPaid}}</p>\r\n  </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataStorageService } from '../services/data-storage.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private dataStorageService: DataStorageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.dataStorageService.fetchBankName();\r\n  }\r\n  \r\n  managePage() {\r\n    this.router.navigate(['/dashboard/manage-form']);\r\n  }\r\n}\r\n","<div class=\"main\">\r\n  <!-- <button \r\n  type=\"button\"\r\n  mat-raised-button\r\n  color=\"primary\"\r\n  >\r\n  \r\n  Manage Bank Names\r\n</button>\r\n<span> | </span>\r\n<button \r\n  type=\"button\"\r\n  mat-raised-button\r\n  color=\"primary\"\r\n  >\r\n  \r\n  Manage Payment Entries\r\n</button> -->\r\n  <router-outlet></router-outlet> \r\n</div>\r\n<!-- <mat-card>\r\n    <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n      <mat-label>Bank Name</mat-label>\r\n      <textarea \r\n        matInput\r\n        #bankNamesTextArea\r\n        rows=\"20\">{{fullBankNames}}</textarea>\r\n      <mat-error *ngIf=\"paymentForm.get('benefName').hasError('required')\">\r\n        This field is required\r\n      </mat-error>\r\n    </mat-form-field>\r\n  </mat-card>\r\n  <mat-card>\r\n    <button\r\n      type=\"button\"\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"updateBankNames(bankNamesTextArea.value)\">\r\n      Update Bank Name\r\n    </button>\r\n    <span> | </span>\r\n    <button\r\n      type=\"button\"\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"fetchBankNames()\">\r\n      Fetch Bank Names\r\n    </button>\r\n  </mat-card> -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataStorageService } from 'src/app/services/data-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-manage',\r\n  templateUrl: './manage-form.component.html',\r\n  styleUrls: ['./manage-form.component.css']\r\n})\r\nexport class ManageComponent implements OnInit {\r\n  bankName: string[];\r\n  fullBankNames = '';\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private dataStorageService: DataStorageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.addBankNamesToForm();\r\n    // this.dataStorageService.fetchBankName();\r\n    this.fetchBankName();\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n  addBankNamesToForm() {\r\n    this.fullBankNames = '';\r\n    for (let i = 0; i < this.bankName.length; i++) {\r\n      if (this.bankName[i] != '') {\r\n        this.fullBankNames += `${this.bankName[i]}\\n`;\r\n      }\r\n    }\r\n  }\r\n  updateBankNames(bankList: string) {\r\n    this.isLoading = true;\r\n    var arrayOfLines = bankList.split('\\n');    \r\n    this.dataStorageService.storeBankName(arrayOfLines)\r\n    .subscribe(() => {\r\n      this.isLoading = false;\r\n      this.dataStorageService.openSnackBar('Bank Name updated successfully', 'Okay');\r\n      this.fetchBankName();\r\n    });\r\n  }\r\n  fetchBankName() {\r\n    this.isLoading = true;\r\n    this.dataStorageService.fetchBankName()\r\n      .subscribe( () => {\r\n        this.isLoading = false;\r\n        this.bankName = this.dataStorageService.bankName;\r\n        console.log(this.bankName);\r\n        this.addBankNamesToForm();\r\n        this.dataStorageService.openSnackBar('Bank Name list fetched successfully', 'Okay');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<button\r\n  type=\"button\"\r\n  (click)=\"goBack()\"\r\n  color=\"primary\"\r\n  mat-raised-button\r\n  style=\"margin-bottom: 10px;\">\r\n  <i class=\"fas fa-arrow-left\"></i>\r\n  &nbsp;&nbsp;\r\n  go back\r\n</button>\r\n<div *ngIf=\"!isLoading\">\r\n<mat-card>\r\n  <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n    <mat-label>Bank Name</mat-label>\r\n    <textarea \r\n      matInput\r\n      #bankNamesTextArea\r\n      rows=\"20\">{{fullBankNames}}</textarea>\r\n    <!-- <mat-error *ngIf=\"paymentForm.get('benefName').hasError('required')\">\r\n      This field is required\r\n    </mat-error> -->\r\n  </mat-form-field>\r\n</mat-card>\r\n<mat-card>\r\n  <button\r\n    type=\"button\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    (click)=\"updateBankNames(bankNamesTextArea.value)\">\r\n    Update Bank Name\r\n  </button>\r\n  <span> | </span>\r\n  <button\r\n    type=\"button\"\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    (click)=\"fetchBankName()\">\r\n    Fetch Bank Names\r\n  </button>\r\n</mat-card>\r\n</div>\r\n<div\r\n  class=\"my-spinner\"\r\n  *ngIf=\"isLoading\">\r\n  <mat-spinner></mat-spinner>\r\n</div>","import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { DataStorageService } from 'src/app/services/data-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-payment',\r\n  templateUrl: './manage-payment.component.html',\r\n  styleUrls: ['./manage-payment.component.css']\r\n})\r\nexport class ManagePaymentComponent implements OnInit {\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private dataStorageService: DataStorageService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n}","<button\r\n  type=\"button\"\r\n  (click)=\"goBack()\"\r\n  color=\"primary\"\r\n  mat-raised-button\r\n  style=\"margin-bottom: 10px;\">\r\n  <i class=\"fas fa-arrow-left\"></i>\r\n  &nbsp;&nbsp;\r\n  go back\r\n</button>\r\n<mat-card *ngIf=\"!isLoading\">\r\n  <h5>Payment Entries Database</h5>\r\n  <!-- <mat-form-field>\r\n    <mat-label>Search entries</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input autocomplete=\"off\">\r\n  </mat-form-field> -->\r\n\r\n  <!-- <mat-table [dataSource]=\"dataSource\" matSort>\r\n    <ng-container matColumnDef=\"index\">\r\n      <mat-header-cell class=\"w-80px\" *matHeaderCellDef mat-sort-header> Sl No. </mat-header-cell>\r\n      <mat-cell class=\"w-80px\" *matCellDef=\"let index = index\"> {{index+1}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"benefName\">\r\n      <mat-header-cell class=\"w-120px\" *matHeaderCellDef mat-sort-header>Benifeciery Name</mat-header-cell>\r\n      <mat-cell class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.benefName}} </mat-cell>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"senderMobNo\">\r\n      <mat-header-cell class=\"w-120px\" *matHeaderCellDef mat-sort-header>Sender Mobile No.</mat-header-cell>\r\n      <mat-cell class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.senderMobNo}} </mat-cell>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"senderName\">\r\n      <mat-header-cell class=\"w-120px\" *matHeaderCellDef mat-sort-header>Sender Name</mat-header-cell>\r\n      <mat-cell class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.senderName}} </mat-cell>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"accountNumber\">\r\n      <mat-header-cell class=\"w-120px\" *matHeaderCellDef mat-sort-header>Account No.</mat-header-cell>\r\n      <mat-cell class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.accountNumber}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"payType\">\r\n      <mat-header-cell class=\"w-800px\" *matHeaderCellDef mat-sort-header>Type</mat-header-cell>\r\n      <mat-cell class=\"w-800px\" *matCellDef=\"let dataSource\"> {{dataSource.payType}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"ifscCode\">\r\n      <mat-header-cell class=\"w-100px\" *matHeaderCellDef mat-sort-header>IFSC Code</mat-header-cell>\r\n      <mat-cell class=\"w-100px\" *matCellDef=\"let dataSource\"> {{dataSource.ifscCode}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"bankName\">\r\n      <mat-header-cell class=\"w-120px\" *matHeaderCellDef mat-sort-header>Bank Name</mat-header-cell>\r\n      <mat-cell class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.bankName}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"payAmountInWords\">\r\n      <mat-header-cell class=\"w-300px\" *matHeaderCellDef mat-sort-header>Amount</mat-header-cell>\r\n      <mat-cell class=\"w-300px\" *matCellDef=\"let dataSource\"> {{dataSource.payAmountInWords}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"todayDate\">\r\n      <mat-header-cell class=\"w-100px\" *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n      <mat-cell class=\"w-100px\" *matCellDef=\"let dataSource\"> {{dataSource.todayDate}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"todayTime\">\r\n      <mat-header-cell class=\"w-100px\" *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\r\n      <mat-cell class=\"w-100px\" *matCellDef=\"let dataSource\"> {{dataSource.todayTime}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"transactionId\">\r\n      <mat-header-cell class=\"w-120px\" *matHeaderCellDef mat-sort-header>Transaction ID</mat-header-cell>\r\n      <mat-cell class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.transactionId}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"status\">\r\n      <mat-header-cell class=\"w-100px\" *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\r\n      <mat-cell\r\n        class=\"w-100px col-{{dataSource.status}}\"\r\n        *matCellDef=\"let dataSource\"> {{dataSource.status}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <mat-header-cell class=\"w-80px\" *matHeaderCellDef mat-sort-header>Action</mat-header-cell>\r\n      <mat-cell class=\"w-80px\" *matCellDef=\"let dataSource\">\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"onDeletePayData(dataSource.delId)\"\r\n          color=\"warn\"\r\n          mat-raised-button\r\n          >\r\n          <i class=\"fas fa-trash\"></i>\r\n          </button>\r\n      </mat-cell>\r\n    </ng-container>\r\n  \r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table> -->\r\n  <!-- [pageSize]=\"5\" -->\r\n  <!-- <mat-paginator\r\n    #scheduledOrdersPaginator \r\n    [pageSizeOptions]=\"[5, 10, 20]\"\r\n    showFirstLastButtons\r\n    ></mat-paginator> -->\r\n\r\n  <app-data-table></app-data-table>\r\n</mat-card>\r\n<div\r\n  class=\"my-spinner\"\r\n  *ngIf=\"isLoading\">\r\n  <mat-spinner></mat-spinner>\r\n</div>","import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\nimport { PayModel } from '../model/payform.model';\r\n\r\n// TODO: Replace this with your own data model type\r\n// export interface DataTableItem {\r\n//   name: string;\r\n//   id: number;\r\n// }\r\n\r\n// TODO: replace this with real data from your application\r\n// const EXAMPLE_DATA: DataTableItem[] = [\r\n//   {id: 1, name: 'Hydrogen'},\r\n//   {id: 2, name: 'Helium'},\r\n//   {id: 3, name: 'Lithium'},\r\n//   {id: 4, name: 'Beryllium'},\r\n//   {id: 5, name: 'Boron'},\r\n// ];\r\n\r\n/**\r\n * Data source for the DataTable view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class DataTableDataSource extends DataSource<PayModel> {\r\n  // EXAMPLE_DATA\r\n  data: PayModel[] = [];\r\n  paginator: MatPaginator;\r\n  sort: MatSort;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<PayModel[]> {\r\n    // Combine everything that affects the rendered data into one update\r\n    // stream for the data-table to consume.\r\n    const dataMutations = [\r\n      observableOf(this.data),\r\n      this.paginator.page,\r\n      this.sort.sortChange\r\n    ];\r\n    // console.log(11);\r\n    // console.log(this.data);\r\n\r\n    return merge(...dataMutations).pipe(map(() => {\r\n      return this.getPagedData(this.getSortedData([...this.data]));\r\n    }));\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect() {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: PayModel[]) {\r\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n    return data.splice(startIndex, this.paginator.pageSize);\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: PayModel[]) {\r\n    if (!this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort.direction === 'asc';\r\n      switch (this.sort.active) {\r\n        case 'benefName': return compare(a.benefName, b.benefName, isAsc);\r\n        case 'senderName': return compare(a.senderName, b.senderName, isAsc);\r\n        case 'payType': return compare(a.payType, b.payType, isAsc);\r\n        case 'ifscCode': return compare(a.ifscCode, b.ifscCode, isAsc);\r\n        case 'bankName': return compare(a.bankName, b.bankName, isAsc);\r\n        case 'payAmount': return compare(a.payAmount, b.payAmount, isAsc);\r\n        case 'payAmountInWords': return compare(a.payAmountInWords, b.payAmountInWords, isAsc);\r\n        case 'todayDate': return compare(a.todayDate, b.todayDate, isAsc);\r\n        case 'todayTime': return compare(a.todayTime, b.todayTime, isAsc);\r\n        case 'transactionId': return compare(a.transactionId, b.transactionId, isAsc);\r\n        case 'status': return compare(a.status, b.status, isAsc);\r\n        case 'delId': return compare(a.delId, b.delId, isAsc);\r\n        case 'senderMobNo': return compare(+a.senderMobNo, +b.senderMobNo, isAsc);\r\n        case 'accountNumber': return compare(+a.accountNumber, +b.accountNumber, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n  // public getTableData() {\r\n  //   return this.data;\r\n  // }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { PayModel } from '../model/payform.model';\r\nimport { DataStorageService } from '../services/data-storage.service';\r\nimport { DataTableDataSource } from './data-table-datasource';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport { DeletePayDataModalComponent } from '../my-modal/delete-pay-data-modal/delete-pay-data-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-data-table',\r\n  templateUrl: './data-table.component.html',\r\n  styleUrls: ['./data-table.component.css']\r\n})\r\nexport class DataTableComponent implements AfterViewInit, OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatTable) table: MatTable<PayModel>;\r\n  dataSource: DataTableDataSource = new DataTableDataSource();\r\n  isLoading = false;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private dataStorageService: DataStorageService\r\n  ) {}\r\n\r\n  displayedColumns = [\r\n    'index',\r\n    'benefName',\r\n    'senderMobNo',\r\n    'senderName',\r\n    'accountNumber',\r\n    'payType',\r\n    'ifscCode',\r\n    'bankName',\r\n    'payAmountInWords',\r\n    'todayDate',\r\n    'todayTime',\r\n    'transactionId',\r\n    'status',\r\n    'delete',\r\n  ];\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.dataStorageService.fetchPayData()\r\n      .subscribe(() => {\r\n        // this.dataSource = new DataTableDataSource();\r\n        console.log(this.dataStorageService.payFormData);\r\n        console.log(this.dataSource);\r\n        this.dataSource.data = this.dataStorageService.payFormData;\r\n\r\n        // this.dataSource = new DataTableDataSource();\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.table.dataSource = this.dataSource;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.dataSource.sort = this.sort;\r\n    // this.dataSource.paginator = this.paginator;\r\n    // this.table.dataSource = this.dataSource;\r\n  }\r\n  onDeletePayData(delId: string) {\r\n    this.dataSource.data.splice(10,1);\r\n    // console.log(this.dataSource.data);\r\n    // return;\r\n    this.openDialog();\r\n    // console.log(delId);\r\n    this.dataStorageService.deletePaymentId = delId;\r\n    // this.dataStorageService.deletePayData(delId)\r\n    //   .subscribe(res => {\r\n    //     // console.log(res);\r\n    //   });\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(\r\n      DeletePayDataModalComponent,\r\n      // {disableClose: true}\r\n    );\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // console.log('The dialog was closed');\r\n    });\r\n  }\r\n  // applyFilter(event: Event) {\r\n  //   const filterValue = (event.target as HTMLInputElement).value;\r\n  //   this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  // }\r\n  // applyFilter(filterValue: string) { \r\n    // this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  // }\r\n}\r\n","<!-- <div *ngIf=\"!isLoading\"> -->\r\n<div class=\"data-table\">\r\n  <!-- <mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\r\n  </mat-form-field> -->\r\n\r\n  <table\r\n    mat-table\r\n    matSort\r\n    aria-label=\"dataSource\">\r\n\r\n    <ng-container matColumnDef=\"index\" sticky>\r\n      <th class=\"w-30px\" *matHeaderCellDef mat-sort-header>No.</th>\r\n      <td class=\"w-30px\" *matCellDef=\"let dataSource; let i = index\">\r\n        {{ (paginator.pageIndex * paginator.pageSize) + (i + 1) }}\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"benefName\">\r\n      <th class=\"w-120px\" *matHeaderCellDef mat-sort-header>Benifeciery Name</th>\r\n      <td class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.benefName}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"senderMobNo\">\r\n      <th class=\"w-120px\" *matHeaderCellDef mat-sort-header>Sender Mobile No.</th>\r\n      <td class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.senderMobNo}} </td>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"senderName\">\r\n      <th class=\"w-120px\" *matHeaderCellDef mat-sort-header>Sender Name</th>\r\n      <td class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.senderName}} </td>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"accountNumber\">\r\n      <th class=\"w-120px\" *matHeaderCellDef mat-sort-header>Account No.</th>\r\n      <td class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.accountNumber}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"payType\">\r\n      <th class=\"w-80px\" *matHeaderCellDef mat-sort-header>Type</th>\r\n      <td class=\"w-80px\" *matCellDef=\"let dataSource\"> {{dataSource.payType}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"ifscCode\">\r\n      <th class=\"w-100px\" *matHeaderCellDef mat-sort-header>IFSC Code</th>\r\n      <td class=\"w-100px\" *matCellDef=\"let dataSource\"> {{dataSource.ifscCode}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"bankName\">\r\n      <th class=\"w-120px\" *matHeaderCellDef mat-sort-header>Bank Name</th>\r\n      <td class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.bankName}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"payAmountInWords\">\r\n      <th class=\"w-300px\" *matHeaderCellDef mat-sort-header>Amount</th>\r\n      <td class=\"w-300px\" *matCellDef=\"let dataSource\"> {{dataSource.payAmountInWords}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"todayDate\">\r\n      <th class=\"w-100px\" *matHeaderCellDef mat-sort-header>Date</th>\r\n      <td class=\"w-100px\" *matCellDef=\"let dataSource\"> {{dataSource.todayDate}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"todayTime\">\r\n      <th class=\"w-100px\" *matHeaderCellDef mat-sort-header>Time</th>\r\n      <td class=\"w-100px\" *matCellDef=\"let dataSource\"> {{dataSource.todayTime}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"transactionId\">\r\n      <th class=\"w-120px\" *matHeaderCellDef mat-sort-header>Transaction ID</th>\r\n      <td class=\"w-120px\" *matCellDef=\"let dataSource\"> {{dataSource.transactionId}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"status\">\r\n      <th class=\"w-100px\" *matHeaderCellDef mat-sort-header>Status</th>\r\n      <td\r\n        class=\"w-100px col-{{dataSource.status}}\"\r\n        *matCellDef=\"let dataSource\"> {{dataSource.status}} </td>\r\n    </ng-container>\r\n    <!-- delete -->\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th class=\"w-80px\" *matHeaderCellDef mat-sort-header>Action</th>\r\n      <td class=\"w-80px\" *matCellDef=\"let dataSource\">\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"onDeletePayData(dataSource.delId)\"\r\n          color=\"warn\"\r\n          mat-raised-button\r\n          >\r\n          <i class=\"fas fa-trash\"></i>\r\n          </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr\r\n      mat-header-row\r\n      *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n \r\n</div>\r\n<mat-paginator\r\n  [length]=\"dataSource?.data.length\"\r\n  #paginator\r\n  showFirstLastButtons\r\n  [pageIndex]=\"0\"\r\n  [pageSize]=\"10\"\r\n  [pageSizeOptions]=\"[5, 10, 20, 50, 100, 250, 500]\">\r\n</mat-paginator>\r\n<!-- </div> -->\r\n<div class=\"my-spinner\" *ngIf=\"isLoading\">\r\n  <mat-spinner></mat-spinner>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  imgCheckedOne: boolean = false;\r\n  imgCheckedTwo: boolean = true;\r\n  imgCheckedThree: boolean = true;\r\n  imgCheckedFour: boolean = true;\r\n  imgCheckedFive: boolean = true;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    // switch (new Date().getDay()) {\r\n    //   case 0:\r\n    //     day = \"Sunday\";\r\n    //     break;\r\n    //   case 1:\r\n    //     day = \"Monday\";\r\n    //     break;\r\n    //   case 2:\r\n    //     day = \"Tuesday\";\r\n    //     break;\r\n    //   case 3:\r\n    //     day = \"Wednesday\";\r\n    //     break;\r\n    //   case 4:\r\n    //     day = \"Thursday\";\r\n    //     break;\r\n    //   case 5:\r\n    //     day = \"Friday\";\r\n    //     break;\r\n    //   case  6:\r\n    //     day = \"Saturday\";\r\n    // }\r\n  }\r\n\r\n}\r\n","\r\n<div>\r\n  <div class=\"carousel\">\r\n    <ul class=\"slides\">\r\n      <!-- first slide -->\r\n      <input type=\"radio\" name=\"radio-buttons\" id=\"img-1\" checked/>\r\n      <li class=\"slide-container\">\r\n        <div class=\"slide-image\">\r\n          <img src=\"assets/img/banner/1.jpg\" />\r\n        </div>\r\n        <!-- <div class=\"carousel-controls\">\r\n          <label for=\"img-5\" class=\"prev-slide\">\r\n            <span>&lsaquo;</span>\r\n          </label>\r\n          <label for=\"img-2\" class=\"next-slide\">\r\n            <span>&rsaquo;</span>\r\n          </label>\r\n        </div> -->\r\n      </li>\r\n      <!-- second slide -->\r\n      <!-- <input type=\"radio\" name=\"radio-buttons\" id=\"img-2\"/>\r\n      <li class=\"slide-container\">\r\n        <div class=\"slide-image\">\r\n          <img src=\"assets/img/banner/2.jpg\" />\r\n        </div>\r\n        <div class=\"carousel-controls\">\r\n          <label for=\"img-1\" class=\"prev-slide\">\r\n            <span>&lsaquo;</span>\r\n          </label>\r\n          <label for=\"img-3\" class=\"next-slide\">\r\n            <span>&rsaquo;</span>\r\n          </label>\r\n        </div>\r\n      </li> -->\r\n      <!-- third slide -->\r\n      <!-- <input type=\"radio\" name=\"radio-buttons\" id=\"img-3\"/>\r\n      <li class=\"slide-container\">\r\n        <div class=\"slide-image\">\r\n          <img src=\"assets/img/banner/3.jpg\" />\r\n        </div>\r\n        <div class=\"carousel-controls\">\r\n          <label for=\"img-2\" class=\"prev-slide\">\r\n            <span>&lsaquo;</span>\r\n          </label>\r\n          <label for=\"img-4\" class=\"next-slide\">\r\n            <span>&rsaquo;</span>\r\n          </label>\r\n        </div>\r\n      </li> -->\r\n      <!-- fourth slide -->\r\n      <!-- <input type=\"radio\" name=\"radio-buttons\" id=\"img-4\"/>\r\n      <li class=\"slide-container\">\r\n        <div class=\"slide-image\">\r\n          <img src=\"assets/img/banner/4.jpg\" />\r\n        </div>\r\n        <div class=\"carousel-controls\">\r\n          <label for=\"img-3\" class=\"prev-slide\">\r\n            <span>&lsaquo;</span>\r\n          </label>\r\n          <label for=\"img-5\" class=\"next-slide\">\r\n            <span>&rsaquo;</span>\r\n          </label>\r\n        </div>\r\n      </li> -->\r\n      <!-- fifth slide -->\r\n      <!-- <input type=\"radio\" name=\"radio-buttons\" id=\"img-5\"/>\r\n      <li class=\"slide-container\">\r\n        <div class=\"slide-image\">\r\n          <img src=\"assets/img/banner/5.jpg\" />\r\n        </div>\r\n        <div class=\"carousel-controls\">\r\n          <label for=\"img-4\" class=\"prev-slide\">\r\n            <span>&lsaquo;</span>\r\n          </label>\r\n          <label for=\"img-1\" class=\"next-slide\">\r\n            <span>&rsaquo;</span>\r\n          </label>\r\n        </div>\r\n      </li> -->\r\n      <!-- <div class=\"carousel-dots\">\r\n        <label for=\"img-1\" class=\"carousel-dot\" id=\"img-dot-1\"></label>\r\n        <label for=\"img-2\" class=\"carousel-dot\" id=\"img-dot-2\"></label>\r\n        <label for=\"img-3\" class=\"carousel-dot\" id=\"img-dot-3\"></label>\r\n        <label for=\"img-4\" class=\"carousel-dot\" id=\"img-dot-4\"></label>\r\n        <label for=\"img-5\" class=\"carousel-dot\" id=\"img-dot-5\"></label>\r\n      </div> -->\r\n    </ul>\r\n    <div class=\"banner-text\">\r\n      <h4>SPEND TIME TO MAKE MONEY</h4>\r\n      <h4>SPEND TIME TO ENJOY MONEY</h4>\r\n      <p>India's Fastest Online Payment Center</p>\r\n      <button\r\n        mat-raised-button\r\n        type=\"button\"\r\n        class=\"btn-submit\"\r\n        color=\"primary\"\r\n        routerLinkActive=\"active\"\r\n        routerLink=\"/add-pay-form\"\r\n      >\r\n        New Payment\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"services we-offer-area text-center bg-gray\">\r\n  <h4 class=\"my-title m-0\" id=\"services\">Our Services</h4>\r\n  <!-- services -->\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"site-heading text-center\">\r\n                    <h2>What we <span>Offer</span></h2>\r\n                    <!-- <h4>Lorem Ipsum is simply dummy text</h4> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <div class=\"row our-offer-items less-carousel\">\r\n                <!-- Single Item -->\r\n                <div class=\"col-lg-3 col-md-4 col-6 equal-height\">\r\n                    <mat-card class=\"item\">\r\n                      <i class=\"fas fa-globe-americas\"></i>\r\n                        <h4>ONLINE SERVICES</h4>\r\n                        <!-- <p>\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. \r\n                        </p> -->\r\n                    </mat-card>\r\n                </div>\r\n                <!-- End Single Item -->\r\n\r\n                <!-- Single Item -->\r\n                <div class=\"col-lg-3 col-md-4 col-6 equal-height\">\r\n                    <mat-card class=\"item\">\r\n                        <i class=\"fas fa-ticket-alt\"></i>\r\n                        <h4>Air & TRAIN TICKETING</h4>\r\n                        <!-- <p>\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. \r\n                        </p> -->\r\n                    </mat-card>\r\n                </div>\r\n                <!-- End Single Item -->\r\n\r\n                <!-- Single Item -->\r\n                <div class=\"col-lg-3 col-md-4 col-6 equal-height\">\r\n                    <mat-card class=\"item\">\r\n                        <i class=\"fas fa-rupee-sign\"></i>\r\n                        <h4>MONEY TRANSFER</h4>\r\n                        <!-- <p>\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. \r\n                        </p> -->\r\n                    </mat-card>\r\n                </div>\r\n                <!-- End Single Item -->\r\n\r\n                <!-- Single Item -->\r\n                <div class=\"col-lg-3 col-md-4 col-6 equal-height\">\r\n                    <mat-card class=\"item\">\r\n                      <i class=\"fas fa-user-friends\"></i>\r\n                        <h4>LIFE INSURANCE</h4>\r\n                        <!-- <p>\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. \r\n                        </p> -->\r\n                    </mat-card>\r\n                </div>\r\n                <!-- End Single Item -->\r\n\r\n                <!-- Single Item -->\r\n                <div class=\"col-lg-3 col-md-4 col-6 equal-height\">\r\n                    <mat-card class=\"item\">\r\n                      <i class=\"fas fa-heartbeat\"></i>\r\n                        <h4>HEALTH & GEN. INSURANCE</h4>\r\n                        <!-- <p>\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. \r\n                        </p> -->\r\n                    </mat-card>\r\n                </div>\r\n                <!-- End Single Item -->\r\n\r\n                <!-- Single Item -->\r\n                <div class=\"col-lg-3 col-md-4 col-6 equal-height\">\r\n                    <mat-card class=\"item\">\r\n                      <i class=\"fas fa-balance-scale\"></i>\r\n                        <h4>LOAN SERVICES</h4>\r\n                        <!-- <p>\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. \r\n                        </p> -->\r\n                    </mat-card>\r\n                </div>\r\n                <!-- End Single Item -->\r\n            </div>\r\n    </div>\r\n  <!-- services -->\r\n</div>\r\n<!-- <h4 class=\"my-title m-0\">About Us</h4> -->\r\n<!-- <div id=\"about-us\" class=\"about-us\">\r\n  <mat-card class=\"aboutus-main\">\r\n    <h2>OUR COMPANY</h2>\r\n    <div class=\"mission\">\r\n      <span>MISSION</span>\r\n      <p>Our mission is to make your Money Transfer with high speed and securely.</p>\r\n    </div>\r\n    <span>NAME</span>\r\n    <p>N.S. Investment & Financial Services</p>\r\n    <span>HISTORY</span>\r\n    <p>NARAYAN SHANTI ENTERPRISE has been established since 2005. We are an international freight forwarder offering import and export freight forwarding, specialized service for over 50 countries. We supply service base on Shanghai International Airpot. We cooperate with major cargo airlines and local companies to take care of your transportation needs at an acceptable rate.</p>\r\n    <img src=\"https://aircargoworld.com/wp-content/uploads/2019/05/PACTL-at-PVG.jpg\" width = 700 alt=\"\">\r\n    <span>OUR COMMITMENT</span>\r\n    <p>\r\n      Thank you for considering NARAYAN SHANTI ENTERPRISE to provide your important transportation and logistics needs. Our vision and commitment to our customers is to deliver quality service and personal attention.  \r\n    </p>\r\n  </mat-card>\r\n</div> -->\r\n<!-- <div id=\"contactus\" class=\"contact-us\">\r\n  <h4 class=\"my-title m-0\" id=\"services\">Contact Us</h4>\r\n</div> -->\r\n<!-- footer -->\r\n<footer class=\"footer-section\">\r\n  <div class=\"container\">\r\n    <div id=\"contactus\" class=\"footer-cta pt-5 pb-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 col-12\">\r\n          <div class=\"single-cta\">\r\n            <i class=\"fas fa-map-marker-alt\"></i>\r\n            <div class=\"cta-text\">\r\n              <h4>Find us</h4>\r\n              <span>\r\n                <b>Head Office:</b>\r\n                Champasari, Ward No. 46, Siliguri - 734003\r\n              </span>\r\n              <span>\r\n                <b>Branch:</b>\r\n                Jeevan Deep Building, Sevoke Road, Siliguri - 734001\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4 col-12\">\r\n          <div class=\"single-cta\">\r\n            <i class=\"fas fa-phone\"></i>\r\n            <div class=\"cta-text\">\r\n              <h4>Call us</h4>\r\n              <span>\r\n                <b>Ashraf:</b>\r\n                <a href=\"tel:+918927485537\">89274 85537</a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4 col-12\">\r\n          <div class=\"single-cta\">\r\n            <i class=\"far fa-envelope-open\"></i>\r\n            <div class=\"cta-text\">\r\n              <h4>Mail us</h4>\r\n              <span>\r\n                <b>E-mail:</b>\r\n                <a href=\"mailto:asrafcomputerandservices@gmail.com\">asrafcomputerandservices@gmail.com</a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"footer-content pt-5 pb-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-4 col-md-12 col-12\">\r\n          <div class=\"footer-widget\">\r\n            <div class=\"footer-logo\">\r\n              <a href=\"index.html\"\r\n                >\r\n                <!-- <img src=\"https://i.ibb.co/QDy827D/ak-logo.png\" class=\"img-fluid\" alt=\"logo\"/> -->\r\n                <h4>AA Enterprises</h4>\r\n                <small>Online payment portal</small>\r\n              </a>\r\n            </div>\r\n            <div class=\"footer-text\">\r\n              <p>\r\n                India's fastest money transfer. \r\n                Spend time to make money,\r\n                Spend time to enjoy money\r\n              </p>\r\n            </div>\r\n            <div class=\"footer-social-icon\">\r\n              <span>Follow us</span>\r\n              <a href=\"#\"><i class=\"fab fa-facebook-f facebook-bg\"></i></a>\r\n              <a href=\"#\"><i class=\"fab fa-twitter twitter-bg\"></i></a>\r\n              <a href=\"#\"><i class=\"fab fa-google-plus-g google-bg\"></i></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-4 col-md-6 col-12\">\r\n          <div class=\"footer-widget\">\r\n            <div class=\"footer-widget-heading\">\r\n              <h3>Useful Links</h3>\r\n            </div>\r\n            <ul>\r\n              <li><a href=\"#top\">Home</a></li>\r\n              <li><a href=\"#services\">Our Services</a></li>\r\n              <!-- <li><a href=\"#\">portfolio</a></li> -->\r\n              <li><a href=\"#aboutus\">About us</a></li>\r\n              <li><a href=\"#\">Expert Team</a></li>\r\n              <li><a href=\"#\">Latest News</a></li>\r\n              <li><a href=\"#contactus\">Contact us</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-4 col-md-6 col-12\">\r\n          <div class=\"footer-widget\">\r\n            <div class=\"footer-widget-heading\">\r\n              <h3>Subscribe</h3>\r\n            </div>\r\n            <div class=\"footer-text mb-25\">\r\n              <p>\r\n                Don’t miss to subscribe to our new feeds, kindly fill the form\r\n                below.\r\n              </p>\r\n            </div>\r\n            <div class=\"subscribe-form\">\r\n              <form action=\"#\">\r\n                <input type=\"text\" placeholder=\"Email Address\" />\r\n                <button><i class=\"fab fa-telegram-plane\"></i></button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"copyright-area\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6 text-center text-lg-left col-12\">\r\n          <div class=\"copyright-text\">\r\n            <p>\r\n              Copyright &copy; 2021, All Right Reserved\r\n              <a href=\"#\">AA Enterprises</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6 d-sm-none text-right\">\r\n          <div class=\"footer-menu\">\r\n            <ul>\r\n              <li><a href=\"#top\">Home</a></li>\r\n              <li><a href=\"#services\">Services</a></li>\r\n              <li><a href=\"#\">Contact</a></li>\r\n              <li><a>|</a></li>\r\n              <li><a routerLink=\"/add-pay-form\">New Payment</a></li>\r\n              <!-- <li><a href=\"#\">Account</a></li> -->\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  \r\n  // canActivate (\r\n  //   route: ActivatedRouteSnapshot,\r\n  //   router: RouterStateSnapshot\r\n  // ): boolean | Promise<boolean  | Observable<boolean> {\r\n  //   return !!this.authService.user;\r\n  // }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const isAuth = !!this.authService.user;\r\n    if (isAuth) {\r\n      return true;\r\n    }\r\n    return this.router.createUrlTree(['/account']);\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService, AuthResonseData } from '../services/auth.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { DataStorageService } from '../services/data-storage.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  allowedUser = [\r\n    'ashraf@nsentreprise.com',\r\n    'admin@gmail.com',\r\n    'asraf@aaenterprise.com',\r\n  ]\r\n  isLoginMode: boolean = true;\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private _snackBar: MatSnackBar,\r\n    private dataStorageService: DataStorageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  onSwitchMode() {\r\n    this.isLoginMode = !this.isLoginMode;\r\n  }\r\n  onSubmit(form: NgForm) {\r\n    if (\r\n      !form.valid\r\n    ) {\r\n      return;\r\n    }\r\n    // console.log(form.value);\r\n    const email = form.value.email;\r\n    // console.log(email);\r\n    // console.log(this.allowedUser);\r\n    // console.log(this.allowedUser.includes(email));\r\n    \r\n    if (\r\n      !this.allowedUser.includes(email)\r\n    ) {\r\n      this.openSnackBar('This is not a registered user', 'okay');\r\n      return;\r\n    }\r\n    const password = form.value.password;\r\n    this.isLoading = true;\r\n\r\n    let authObs: Observable<AuthResonseData>\r\n\r\n    if (this.isLoginMode) {\r\n      authObs = this.authService.login(email, password);\r\n    } else {\r\n      // authObs = this.authService.signup(email, password);\r\n    }\r\n    authObs.subscribe(resData => {\r\n      // console.log(resData);\r\n      this.isLoading = false;\r\n      // only for logged in\r\n      this.dataStorageService.fetchBankName();\r\n      this.gotoHomePage();\r\n    }, errorMessage => {\r\n      // console.log(errorMessage);\r\n      this.openSnackBar(errorMessage, 'Close')\r\n      this.isLoading = false;\r\n    });\r\n    \r\n    form.reset();\r\n\r\n  }\r\n  gotoHomePage() {\r\n    this.router.navigate(['']);\r\n  }\r\n  openSnackBar(message: string, action: string) {\r\n    this._snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n  \r\n}\r\n","<div class=\"auth-wrapper\">\r\n  <div *ngIf=\"!isLoading\">\r\n    <div class=\"logo-div\">\r\n      <!-- <img src=\"assets/img/logo.png\" alt=\"\" class=\"logo\" width=\"80\" /> -->\r\n      <h1 style=\"color: #eeeeee; text-transform: uppercase; font-weight: 400\">\r\n        AA Enterprise\r\n      </h1>\r\n    </div>\r\n    <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\">\r\n      <mat-card>\r\n        <h4>\r\n          USER\r\n          {{ isLoginMode ? \"LOGIN\" : \"SIGN UP\" }}\r\n        </h4>\r\n        <mat-form-field class=\"w-100\">\r\n          <mat-label>User Name</mat-label>\r\n          <input matInput type=\"email\" ngModel name=\"email\" required email />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"w-100\">\r\n          <mat-label>Password</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"password\"\r\n            ngModel\r\n            name=\"password\"\r\n            required\r\n            minlength=\"6\"\r\n          />\r\n        </mat-form-field>\r\n        <button mat-raised-button type=\"submit\" class=\"btn-submit\">\r\n          <!-- [disabled]=\"!authForm.valid\" -->\r\n          {{ isLoginMode ? \"Login\" : \"Sign up\" }}\r\n        </button>\r\n        <!-- <button \r\n          mat-raised-button \r\n          type=\"button\"\r\n          class=\"switch-btn\"\r\n          (click)=\"onSwitchMode()\">\r\n            Switch to \r\n            {{ !isLoginMode ? 'Login' : 'Sign up' }} Page\r\n          </button> -->\r\n      </mat-card>\r\n    </form>\r\n  </div>\r\n  <div class=\"spinner-div\">\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  </div>\r\n</div>\r\n","export class User {\r\n  constructor(\r\n    public email: string,\r\n    public password: string,\r\n    private _token: string,\r\n    private _tokenExpirationDate: Date\r\n  ) {}\r\n\r\n  get token() {\r\n    if (\r\n      !this._tokenExpirationDate ||\r\n      new Date() > this._tokenExpirationDate\r\n    ) {\r\n      return null;\r\n    }\r\n    return this._token;\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n// import { DataTableDataSource } from 'src/app/data-table/data-table-datasource';\r\nimport { DataStorageService } from 'src/app/services/data-storage.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-delete-pay-data-modal',\r\n  templateUrl: './delete-pay-data-modal.component.html',\r\n  styleUrls: ['./delete-pay-data-modal.component.css']\r\n})\r\nexport class DeletePayDataModalComponent implements OnInit {\r\n  isLoading = false;\r\n  constructor(\r\n    private dataStorageService: DataStorageService,\r\n    public dialogRef:  MatDialogRef<DeletePayDataModalComponent>,\r\n    private router: Router\r\n    // private dataTableDataSource: DataTableDataSource\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(this.dataTableDataSource.getTableData());\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  deletePaymentData() {\r\n    this.isLoading = true;\r\n    this.dataStorageService.deletePayData()\r\n      .subscribe(res => {\r\n        this.dataStorageService.openSnackBar(\r\n          'Payment data was successfully deleted',\r\n          'okay');\r\n        this.isLoading = false;\r\n        this.onNoClick();\r\n      });\r\n    // this.router.navigate(['/dashboard/manage-payment']);\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!isLoading\">\r\n  <h1 mat-dialog-title>Do you really want to delete this payment data ?</h1>\r\n  <!-- <div mat-dialog-content> </div> -->\r\n  <div mat-dialog-actions class=\"action-div\">\r\n    <button \r\n      mat-button\r\n      mat-raised-button\r\n      color=\"warn\"\r\n      (click)=\"deletePaymentData()\"\r\n      >Delete</button>\r\n    <button\r\n      mat-button\r\n      mat-raised-button\r\n      class=\"btn-dark\"\r\n      color=\"warn\"\r\n      (click)=\"onNoClick()\">Cancle</button>\r\n  </div>\r\n</div>\r\n<div class=\"my-spinner\" *ngIf=\"isLoading\">\r\n  <mat-spinner></mat-spinner>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { PayModel } from 'src/app/model/payform.model';\r\nimport { DataStorageService } from 'src/app/services/data-storage.service';\r\nimport { PayFormService } from 'src/app/services/payform.service';\r\n\r\n@Component({\r\n  selector: 'app-payment-confirm-modal',\r\n  templateUrl: './payment-confirm-modal.component.html',\r\n  styleUrls: ['./payment-confirm-modal.component.css']\r\n})\r\nexport class PaymentConfirmModalComponent implements OnInit {\r\n  // paymentInitiated: boolean;\r\n  inPaymentMode: boolean = false;\r\n  payFormData: PayModel;\r\n  redirectToInvoice: boolean = false;\r\n  // redirectCount: number = 0;\r\n  redirectCountDown: number = 5;\r\n  \r\n  constructor(\r\n    private dataStorageService: DataStorageService,\r\n    private payFormService: PayFormService,\r\n    private router: Router,\r\n    public dialogRef:  MatDialogRef<PaymentConfirmModalComponent>\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.payFormData = this.payFormService.payFormData;\r\n    console.log(this.payFormData);\r\n    console.log(111111);\r\n    // this.playAudio();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n    this.payFormService.paymentDone = false;\r\n  }\r\n  gotoPayInvoice() {\r\n    this.dataStorageService.storePayData(this.payFormData)\r\n    .subscribe(() => {\r\n      this.dataStorageService.openSnackBar('Payment detail was successfully saved', 'Okay');\r\n    });\r\n    this.inPaymentMode = true;\r\n    setTimeout(() => {\r\n      this.payFormService.paymentDone = true;\r\n      this.inPaymentMode = false;\r\n      this.redirectToInvoice = true;\r\n      // this.startRedirectCount();\r\n      this.startRedirectCountDown();\r\n    }, 5000);\r\n    setTimeout(() => {\r\n      this.onNoClick();\r\n      this.redirectToInvoice = false;\r\n      this.router.navigate(['/pay-success-invoice']);      \r\n    }, 10000);\r\n  }\r\n  // startRedirectCount() {\r\n  //   var refreshIntervalId = setInterval(() => {\r\n  //     this.redirectCount += 5;\r\n  //     if (this.redirectCount >= 100) {\r\n  //       clearInterval(refreshIntervalId);\r\n  //     }\r\n  //   }, 200);    \r\n  // }\r\n  startRedirectCountDown() {\r\n    var refreshIntervalId = setInterval(() => {\r\n      this.redirectCountDown -= 1;\r\n      if (this.redirectCountDown <= 0) {\r\n        clearInterval(refreshIntervalId);\r\n      }\r\n    }, 800);\r\n  }\r\n\r\n  // playAudio(){\r\n  //   let audio = new Audio();\r\n  //   audio.src = \"../../../../assets/audio/win.mp3\";\r\n  //   audio.load();\r\n  //   audio.play();\r\n  // }\r\n}\r\n","<div\r\n  class=\"modal-wrapper\"\r\n  *ngIf=\"!inPaymentMode && !redirectToInvoice\">\r\n  <h1 mat-dialog-title>Are you sure to save this payment detail ?</h1>\r\n  <div mat-dialog-content>\r\n    <div class=\"main-div\">\r\n      <div>\r\n        <b>Beneficiary Name:</b>\r\n        <p>{{payFormData.benefName}}</p>\r\n      </div>\r\n      <mat-divider></mat-divider>\r\n      <div>\r\n        <b>Account Number:</b>\r\n        <p>{{payFormData.accountNumber}}</p>\r\n      </div>\r\n      <mat-divider></mat-divider>\r\n      <div>\r\n        <b>IFSC Code:</b>\r\n        <p>{{payFormData.ifscCode}}</p>\r\n      </div>\r\n      <mat-divider></mat-divider>\r\n      <div>\r\n        <b>Amount</b>\r\n        <p>{{payFormData.payAmountInWords}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <button \r\n      mat-button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"gotoPayInvoice()\">Save Detail</button>\r\n    <button\r\n      mat-button\r\n      mat-raised-button\r\n      color=\"warn\"\r\n      (click)=\"onNoClick()\">Cancle</button>\r\n  </div>\r\n</div>\r\n<mat-spinner\r\n*ngIf=\"inPaymentMode\"></mat-spinner>\r\n<div\r\n  class=\"success-card\"\r\n  *ngIf=\"redirectToInvoice\"\r\n  >\r\n  <div class='img-fluid' style=\"font-size: 110px;\">\r\n    <!-- <img src=\"assets/img/pay-done.png\" alt=\"\" class=\"logo\" width=\"80\"> -->\r\n    <i class=\"far fa-check-circle\"></i>\r\n  </div>\r\n  <strong></strong>\r\n  <p>Payment Detail successfully saved</p>\r\n  <!-- <button\r\n    type=\"button\"\r\n    class=\"close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button> -->\r\n  <p class=\"p2\">GENERATING RECEIPT IN ({{redirectCountDown}} Sec)</p>\r\n  <!-- <mat-progress-bar mode=\"determinate\" [value]=\"redirectCount\"></mat-progress-bar> -->\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n  events: string[] = [];\r\n  opened: boolean;\r\n  isAuthenticated = false;\r\n  private userSub: Subscription;\r\n\r\n  constructor(\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.userSub = this.authService.user;\r\n    // this.userSub = this.authService.user.subscribe(user => {\r\n    //     this.isAuthenticated = !user ? false : true;\r\n    // });\r\n    this.isAuthenticated = !!this.userSub;\r\n    // console.log(this.userSub);\r\n    // this.isAuthenticated = this.userSub ? true : false;\r\n    // console.log(this.isAuthenticated);\r\n  }\r\n  logout() {\r\n    this.authService.logout(true);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.userSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-sidenav-container class=\"example-container\">\r\n  <mat-sidenav \r\n  #sidenav\r\n  mode=\"over\"\r\n  [(opened)]=\"opened\"\r\n  (opened)=\"events.push('open!')\"\r\n  (closed)=\"events.push('close!')\">\r\n    <mat-toolbar>\r\n      Menu\r\n    </mat-toolbar>\r\n    <mat-nav-list>\r\n      <a \r\n        *ngIf=\"isAuthenticated\"\r\n        mat-list-item\r\n        routerLinkActive=\"active\"\r\n        routerLink=\"/add-pay-form\"\r\n        (click)=\"sidenav.toggle()\">\r\n        <i class=\"fas fa-money-check\"></i>\r\n        &nbsp;&nbsp;\r\n        New Payment\r\n      </a>\r\n      <mat-divider></mat-divider>\r\n      <a \r\n        *ngIf=\"!isAuthenticated\"\r\n        mat-list-item\r\n        routerLinkActive=\"active\" \r\n        routerLink=\"/account\"\r\n        (click)=\"sidenav.toggle()\">\r\n        <i class=\"fas fa-user-circle\"></i>\r\n        &nbsp;&nbsp;\r\n        Accounts\r\n      </a>\r\n      <a \r\n        *ngIf=\"isAuthenticated\"\r\n        mat-list-item\r\n        routerLinkActive=\"active\" \r\n        routerLink=\"/account\"\r\n        (click)=\"logout()\"\r\n        (click)=\"sidenav.toggle()\">\r\n        <i class=\"fas fa-power-off\"></i>\r\n        &nbsp;&nbsp;\r\n        Log Out\r\n      </a>\r\n      <mat-divider></mat-divider>\r\n      <a \r\n        *ngIf=\"isAuthenticated\"\r\n        mat-list-item\r\n        routerLinkActive=\"active\" \r\n        routerLink=\"/dashboard\"\r\n        (click)=\"sidenav.toggle()\">\r\n        <i class=\"fas fa-cogs\"></i>\r\n        &nbsp;&nbsp;\r\n        Dashboard\r\n      </a>\r\n        <!-- routerLinkActive=\"active\" \r\n        routerLink=\"/student\" -->\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"sidenav.toggle()\">\r\n        <i class=\"fa fa-bars\"></i>\r\n      </button>\r\n      <span class=\"navbar-brand\" routerLink=\"\">\r\n        AA Enterprises\r\n        <br>\r\n        <small>Online payment portal</small>\r\n      </span>\r\n      <div style=\"margin-left: auto;\" class=\"nav-menu-link\">\r\n        <a \r\n          *ngIf=\"isAuthenticated\"\r\n          mat-raised-button\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/add-pay-form\">\r\n          <!-- New Payment -->\r\n          <i class=\"fas fa-money-check\"></i>\r\n        </a>\r\n        <a \r\n          *ngIf=\"!isAuthenticated\"\r\n          mat-raised-button\r\n          routerLinkActive=\"active\" \r\n          routerLink=\"/account\">\r\n          <!-- My Accounts -->\r\n          <i class=\"fas fa-user-circle\"></i>\r\n        </a>\r\n        <a \r\n          *ngIf=\"isAuthenticated\"\r\n          mat-raised-button\r\n          routerLinkActive=\"active\" \r\n          routerLink=\"/account\"\r\n          (click)=\"logout()\">\r\n          <!-- Log Out -->\r\n          <i class=\"fas fa-power-off\"></i>\r\n        </a>\r\n      </div>\r\n    </mat-toolbar>\r\n    <!-- inner components -->\r\n    <router-outlet></router-outlet>\r\n    <!-- <app-add-pay-form></app-add-pay-form>\r\n    <app-pay-success-invoice></app-pay-success-invoice> -->\r\n    <!-- inner components -->\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PayFormService } from '../services/payform.service';\r\n\r\n@Component({\r\n  selector: 'app-pay-success-invoice',\r\n  templateUrl: './pay-success-invoice.component.html',\r\n  styleUrls: ['./pay-success-invoice.component.css'],\r\n})\r\nexport class PaySuccessInvoiceComponent implements OnInit {\r\n  showPrintButton = true;\r\n\r\n  payFormData: any;\r\n  paymentDone: boolean = true;\r\n\r\n  constructor(private payFormService: PayFormService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    // this.paymentDone = this.payFormService.paymentDone;\r\n    console.log(this.paymentDone);\r\n\r\n    this.payFormData = this.payFormService.payFormData;\r\n    console.log(this.payFormData);\r\n    if (this.payFormData === undefined) {\r\n      this.paymentDone = false;\r\n    }\r\n  }\r\n  gotoPayForm() {\r\n    this.router.navigate(['/add-pay-form']);\r\n  }\r\n\r\n  printScreen() {\r\n    // this.showPrintButton = false;\r\n\r\n    setTimeout(() => {\r\n      window.print();\r\n    }, 100);\r\n\r\n    setTimeout(() => {\r\n      // this.showPrintButton = true;\r\n    }, 2000);\r\n  }\r\n}\r\n","<div class=\"pay-invoice\" *ngIf=\"paymentDone\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"logo-div\">\r\n      <!-- <img src=\"assets/img/logo.png\" alt=\"\" class=\"logo\" width=\"80\"> -->\r\n      <span\r\n        style=\"\r\n          font-size: 30px;\r\n          font-weight: 500;\r\n          color: #21005b;\r\n          cursor: pointer;\r\n        \"\r\n        routerLink=\"/add-pay-form\"\r\n        >AA Enterprises</span\r\n      >\r\n    </div>\r\n    <h4 class=\"main-title\">TRANSACTION RECEIPT</h4>\r\n    <div class=\"main-table\">\r\n      <div class=\"row\">\r\n        <div class=\"col-4\">\r\n          <h5>Beneficiery Name:</h5>\r\n          <p>{{ payFormData.benefName }}</p>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <h5>Agent Mobile Number:</h5>\r\n          <p>8927485537</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-4\">\r\n          <h5>Sender Mobile Number:</h5>\r\n          <p>{{ payFormData.senderMobNo }}</p>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <h5 style=\"padding-right: 5px\">Agent Shop Name:</h5>\r\n          <p style=\"padding-left: 0\">Asraf Computer and Services</p>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <h5>Sender Name:</h5>\r\n          <p>{{ payFormData.senderName }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-4\">\r\n          <h5>Account Number:</h5>\r\n          <p>{{ payFormData.accountNumber }}</p>\r\n        </div>\r\n        <div class=\"col-4 jcb\">\r\n          <h5>Type:</h5>\r\n          <p>{{ payFormData.payType }}</p>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <h5>IFCS Code:</h5>\r\n          <p>{{ payFormData.ifscCode }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-4\">\r\n          <h5>Bank Name:</h5>\r\n          <p>{{ payFormData.bankName }}</p>\r\n        </div>\r\n        <div class=\"col-4 jcb\">\r\n          <h5>Date:</h5>\r\n          <!-- dynamically set -->\r\n          <p class=\"date-time-div\">{{ payFormData.todayDate }}</p>\r\n        </div>\r\n        <div class=\"col-4 jcb\">\r\n          <h5>Time:</h5>\r\n          <p class=\"date-time-div\">\r\n            <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n            {{ payFormData.todayTime }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <h5>Transaction Id:</h5>\r\n          <p>{{ payFormData.transactionId }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <h5>Amount:</h5>\r\n          <p>{{ payFormData.payAmountInWords }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <h5>Status:</h5>\r\n          <select class=\"status-select\">\r\n            <option selected value=\"SUCCESS\">SUCCESS</option>\r\n            <option value=\"PENDING\">PENDING</option>\r\n            <option value=\"AWAITED\">AWAITED</option>\r\n            <option value=\"DENIED\">DENIED</option>\r\n            <option value=\"REJECTED\">REJECTED</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <p class=\"generated-text\">\r\n    ** THIS IS COMPUTER GENERATED RECEIPT **\r\n    <small class=\"print no-print\" (click)=\"printScreen()\">print</small>\r\n    <small class=\"goback no-print\" (click)=\"gotoPayForm()\">go back</small>\r\n  </p>\r\n  <small class=\"gen-info\"\r\n    >your payment detail has been saved. Payment will be done soon. for any\r\n    query contact our agent.\r\n  </small>\r\n</div>\r\n<div class=\"error-box\" *ngIf=\"!paymentDone\">\r\n  <mat-card>\r\n    <h4>Looks like there is no Payment Information</h4>\r\n    <p>Please go to Payment Page to make payment</p>\r\n    <mat-divider></mat-divider>\r\n    <br />\r\n    <button\r\n      type=\"button\"\r\n      mat-raised-button\r\n      (click)=\"gotoPayForm()\"\r\n      color=\"primary\"\r\n    >\r\n      Make New Payment\r\n    </button>\r\n  </mat-card>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport {\r\n  BehaviorSubject,\r\n  // Subject,\r\n  throwError,\r\n} from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { User } from '../model/user.model';\r\nconst fbase_key = 'AIzaSyAmcuRcBveG0gQb4SZZlPyWHJspWV7kK8U';\r\n\r\nexport interface AuthResonseData {\r\n  idToken: string;\r\n  email: string;\r\n  refreshToken: string;\r\n  expiresIn: string;\r\n  localId: string;\r\n  registered?: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  userSub = new BehaviorSubject<User>(null);\r\n  user: any;\r\n  token: string = null;\r\n  private tokenExpirationTimer: any;\r\n\r\n  constructor(private router: Router, private http: HttpClient) {}\r\n\r\n  /*\r\n  signup(email: string, password: string) {\r\n    return this.http.post<AuthResonseData>(\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${fbase_key}`,\r\n      {\r\n        email: email,\r\n        password: password,\r\n        returnSecureToken: true\r\n      }\r\n    ).pipe(\r\n      catchError(this.errorHandler),\r\n      tap(resData => {\r\n        this.handelAunthenntication(\r\n          resData.email,\r\n          resData.localId,\r\n          resData.idToken,\r\n          +resData.expiresIn\r\n        );\r\n      })\r\n    );\r\n  }\r\n  */\r\n\r\n  login(email: string, password: string) {\r\n    return this.http\r\n      .post<AuthResonseData>(\r\n        `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${fbase_key}`,\r\n        {\r\n          email: email,\r\n          password: password,\r\n          returnSecureToken: true,\r\n        }\r\n      )\r\n      .pipe(\r\n        catchError(this.errorHandler),\r\n        tap((resData) => {\r\n          // console.log(this.token);\r\n          console.log(resData);\r\n          this.handelAunthenntication(\r\n            resData.email,\r\n            resData.localId,\r\n            resData.idToken,\r\n            +resData.expiresIn\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  autoLogin() {\r\n    const UserData: {\r\n      email: string;\r\n      id: string;\r\n      _token: string;\r\n      _tokenExpirationDate: string;\r\n    } = JSON.parse(localStorage.getItem('UserData'));\r\n    if (!UserData) {\r\n      return;\r\n    }\r\n\r\n    const loadedUser = new User(\r\n      UserData.email,\r\n      UserData.id,\r\n      UserData._token,\r\n      new Date(UserData._tokenExpirationDate)\r\n    );\r\n\r\n    if (loadedUser.token) {\r\n      this.user = loadedUser;\r\n      this.login(this.user.email, this.user.password);\r\n      this.token = loadedUser.token;\r\n      const expirationDuration =\r\n        new Date(UserData._tokenExpirationDate).getTime() -\r\n        new Date().getTime();\r\n\r\n      this.autoLogout(expirationDuration);\r\n    }\r\n  }\r\n\r\n  logout(accPage: boolean) {\r\n    this.user = null;\r\n    if (accPage) {\r\n      this.router.navigate(['/account']);\r\n      localStorage.removeItem('UserData');\r\n    }\r\n    if (this.tokenExpirationTimer) {\r\n      clearTimeout(this.tokenExpirationTimer);\r\n    }\r\n    this.tokenExpirationTimer = null;\r\n  }\r\n  autoLogout(expirationDuration: number) {\r\n    this.tokenExpirationTimer = setTimeout(() => {\r\n      this.logout(false);\r\n      console.log('Auto login called');\r\n      console.log(expirationDuration);\r\n      this.autoLogin();\r\n      // }, 5000);\r\n    }, expirationDuration);\r\n  }\r\n  private handelAunthenntication(\r\n    email: string,\r\n    userId: string,\r\n    token: string,\r\n    expiresIn: number\r\n  ) {\r\n    this.token = token;\r\n\r\n    let expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\r\n    // console.log(expirationDate);\r\n    // expirationDate = expirationDate.toLocaleString('en-US', { timeZone: 'Asia/Calcutta' })\r\n\r\n    const user = new User(email, userId, token, expirationDate);\r\n    // this.userSub.next(user);\r\n    this.autoLogout(expiresIn * 1000);\r\n    this.user = user;\r\n\r\n    localStorage.setItem('UserData', JSON.stringify(user));\r\n  }\r\n\r\n  private errorHandler(errorRes: HttpErrorResponse) {\r\n    let errorMessage: string = 'An unkonwn Error Occurred!';\r\n\r\n    if (!errorRes.error || !errorRes.error.error) {\r\n      return throwError(errorMessage);\r\n    }\r\n    switch (errorRes.error.error.message) {\r\n      case 'EMAIL_EXISTS':\r\n        errorMessage =\r\n          'The email address is already in use by another account.';\r\n        break;\r\n      case 'OPERATION_NOT_ALLOWED':\r\n        errorMessage = 'Password sign-in is disabled for this project.';\r\n        break;\r\n      case 'TOO_MANY_ATTEMPTS_TRY_LATER':\r\n        errorMessage =\r\n          'We have blocked all requests from this device due to unusual activity. Try again later.';\r\n        break;\r\n      case 'EMAIL_NOT_FOUND':\r\n        errorMessage =\r\n          'There is no user record corresponding to this identifier. The user may have been deleted.';\r\n        break;\r\n      case 'INVALID_PASSWORD':\r\n        errorMessage =\r\n          'The password is invalid or the user does not have a password.';\r\n        break;\r\n      case 'USER_DISABLED':\r\n        errorMessage =\r\n          'The user account has been disabled by an administrator.';\r\n      // break;\r\n    }\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n\r\n// AIzaSyB6X9JxnmFX4jYt_7xWQiUsnDimG3wbjxA\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { PayModel } from '../model/payform.model';\r\n\r\nexport type bankNameInterface = string[];\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DataStorageService {\r\n  payFormData: PayModel[];\r\n  bankName = [];\r\n  deletePaymentId: string = null;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private http: HttpClient,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n  // payment call backs\r\n  storePayData(payData: PayModel) {\r\n    let userToken = this.authService.token;\r\n    return this.http.post(\r\n      'https://nse-app-85c76-default-rtdb.firebaseio.com/payment.json?auth=' +\r\n        userToken,\r\n      payData\r\n    );\r\n  }\r\n  fetchPayData() {\r\n    let userToken = this.authService.token;\r\n    return this.http\r\n      .get<PayModel[]>(\r\n        'https://nse-app-85c76-default-rtdb.firebaseio.com/payment.json?auth=' +\r\n          userToken\r\n      )\r\n      .pipe(\r\n        map((responseData) => {\r\n          this.payFormData = [];\r\n          for (let k in responseData) {\r\n            responseData[k].delId = k;\r\n            this.payFormData.push(responseData[k]);\r\n          }\r\n        })\r\n      );\r\n  }\r\n  deletePayData() {\r\n    let delId = this.deletePaymentId;\r\n    let userToken = this.authService.token;\r\n    return this.http.delete(\r\n      `https://nse-app-85c76-default-rtdb.firebaseio.com/payment/${delId}.json?auth=${userToken}`\r\n    );\r\n    // .delete('https://nse-app-85c76-default-rtdb.firebaseio.com/payment.json?auth=' + userToken)\r\n  }\r\n  // dashboard call backs\r\n  storeBankName(bankNameArr: string[]) {\r\n    let userToken = this.authService.token;\r\n    return this.http.put(\r\n      'https://nse-app-85c76-default-rtdb.firebaseio.com/dashboard/bankName.json?auth=' +\r\n        userToken,\r\n      bankNameArr\r\n    );\r\n  }\r\n  fetchBankName() {\r\n    let userToken = this.authService.token;\r\n\r\n    console.log('fetchBankName');\r\n\r\n    return this.http\r\n      .get<bankNameInterface>(\r\n        'https://nse-app-85c76-default-rtdb.firebaseio.com/dashboard/bankName.json?auth=' +\r\n          userToken\r\n      )\r\n      .pipe(\r\n        map((responseData) => {\r\n          this.bankName = responseData;\r\n        })\r\n      );\r\n  }\r\n  openSnackBar(message: string, action: string) {\r\n    this._snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","import { PayModel } from \"../model/payform.model\";\r\n// import { DataStorageService } from \"./data-storage.service\";\r\n\r\nexport class PayFormService {\r\n  payFormData: PayModel;\r\n  paymentInitiated: boolean = false;\r\n  paymentDone: boolean = false;\r\n\r\n  constructor(\r\n    // private dataStorageService: DataStorageService\r\n  ) {}\r\n  \r\n  addPayData(payData: PayModel) {\r\n    this.payFormData = payData;\r\n    // this.dataStorageService.storePayData(payData);\r\n  }\r\n  getPayFormData() {\r\n    return this.payFormData;\r\n  }\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}